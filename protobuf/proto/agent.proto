syntax = "proto3";

package agent;
option go_package = "github.com/dyrector-io/darklens/protobuf/go/agent";

import "google/protobuf/timestamp.proto";

/*
 * Common
 */
message Empty {}

/*
 * Backend gRPC service
 */
service Agent {
  rpc Connect(AgentInfo) returns (stream AgentCommand);
  rpc ContainerState(stream ContainerStateListMessage)
      returns (Empty);
  rpc DeleteContainer(ContainerDeleteRequest) returns (Empty);
  rpc ContainerLog(stream ContainerLogMessage) returns (Empty);
  rpc ContainerInspect(ContainerInspectMessage) returns (Empty);
}

/*
 * Agent commands
 */
message AgentInfo {
  string id = 1;
  string version = 2;
}

message AgentCommand {
  oneof command {
    ContainerStateRequest containerState = 1;
    CloseConnectionRequest close = 2;
    ContainerCommandRequest containerCommand = 3;
    ContainerDeleteRequest containerDelete = 4;
    ContainerLogRequest containerLog = 5;
    ContainerInspectRequest containerInspect = 6;
  }
}

message ContainerStateRequest {
  optional bool oneShot = 1;
}

enum CloseReason {
  CLOSE_REASON_UNSPECIFIED = 0;
  CLOSE = 1;
  SELF_DESTRUCT = 2;
  SHUTDOWN = 3;
}

message CloseConnectionRequest { CloseReason reason = 1; }

enum ContainerOperation {
  CONTAINER_OPERATION_UNSPECIFIED = 0;
  START_CONTAINER = 1;
  STOP_CONTAINER = 2;
  RESTART_CONTAINER = 3;
}

message ContainerCommandRequest {
  string name = 1;
  ContainerOperation operation = 2;
}

message ContainerDeleteRequest {
  string name = 1;
}

message ContainerLogRequest {
  string name = 1;
  bool streaming = 2;
  uint32 tail = 3;
}

message ContainerInspectRequest {
  string name = 1;
}

/*
 * Container state
 */

enum ContainerState {
  CONTAINER_STATE_UNSPECIFIED = 0;
  RUNNING = 1;
  WAITING = 2;
  EXITED = 3;
  REMOVED = 4;
}

message ContainerStateItemPort {
  int32 internal = 1;
  int32 external = 2;
}

message ContainerStateItem {
  string name = 1;
  string command = 2;
  google.protobuf.Timestamp createdAt = 3;

  /* The 'State' of the container (Created, Running, etc) */
  ContainerState state = 4;
  /* The 'reason' behind 'state'. */
  string reason = 5;

  string imageName = 6;
  string imageTag = 7;

  repeated ContainerStateItemPort ports = 8;
}

message ContainerStateListMessage {
  repeated ContainerStateItem data = 1;
}

/*
 * Container log
 */
message ContainerLogMessage {
  string log = 1;
}

/*
 * Container inspect
 */
message ContainerInspectMessage {
  string name = 1;
  string inspection = 2;
}
